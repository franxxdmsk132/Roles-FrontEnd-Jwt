{"ast":null,"code":"import { LoginUsuario } from '../models/login-usuario';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/token.service\";\nimport * as i2 from \"../service/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"ngx-toastr\";\nfunction LoginComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"h2\");\n    i0.ɵɵtext(2, \"Ya has iniciado sesi\\u00F3n\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction LoginComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"div\", 5)(2, \"div\", 6)(3, \"ul\", 7)(4, \"li\", 8)(5, \"a\", 9);\n    i0.ɵɵtext(6, \"Iniciar Sesi\\u00F3n\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"li\", 8)(8, \"a\", 10);\n    i0.ɵɵtext(9, \"Crear Cuenta\");\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(10, \"div\", 11)(11, \"form\", 12, 1);\n    i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_ng_template_2_Template_form_ngSubmit_11_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onLogin());\n    });\n    i0.ɵɵelementStart(13, \"div\", 13)(14, \"label\", 14);\n    i0.ɵɵtext(15, \"Nombre de Usuario\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"input\", 15);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function LoginComponent_ng_template_2_Template_input_ngModelChange_16_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r1.nombreUsuario, $event) || (ctx_r1.nombreUsuario = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(17, \"div\", 13)(18, \"label\", 16);\n    i0.ɵɵtext(19, \"Contrase\\u00F1a\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"input\", 17);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function LoginComponent_ng_template_2_Template_input_ngModelChange_20_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r1.password, $event) || (ctx_r1.password = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(21, \"div\", 13)(22, \"button\", 18);\n    i0.ɵɵelement(23, \"i\", 19);\n    i0.ɵɵtext(24, \" Iniciar Sesi\\u00F3n\");\n    i0.ɵɵelementEnd()()()()()();\n  }\n  if (rf & 2) {\n    const f_r3 = i0.ɵɵreference(12);\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(16);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r1.nombreUsuario);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r1.password);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", !f_r3.valid);\n  }\n}\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    tokenService;\n    authService;\n    router;\n    toastr;\n    isLogged = false;\n    isLoginFail = false;\n    loginUsuario;\n    nombreUsuario;\n    password;\n    roles = [];\n    errMsj;\n    constructor(tokenService, authService, router, toastr) {\n      this.tokenService = tokenService;\n      this.authService = authService;\n      this.router = router;\n      this.toastr = toastr;\n    }\n    ngOnInit() {\n      if (this.tokenService.getToken()) {\n        this.isLogged = true;\n        this.isLoginFail = false;\n        this.roles = this.tokenService.getAuthorities();\n      }\n    }\n    onLogin() {\n      this.loginUsuario = new LoginUsuario(this.nombreUsuario, this.password);\n      this.authService.login(this.loginUsuario).subscribe(data => {\n        this.isLogged = true;\n        this.tokenService.setToken(data.token);\n        this.tokenService.setUserName(data.nombreUsuario);\n        this.tokenService.setAuthorities(data.authorities);\n        this.roles = data.authorities;\n        this.toastr.success('Bienvenido ' + data.nombreUsuario, 'OK', {\n          timeOut: 3000,\n          positionClass: 'toast-top-center'\n        });\n        this.router.navigate(['/']);\n      }, err => {\n        this.isLogged = false;\n        this.errMsj = err.error.message;\n        this.toastr.error(this.errMsj, 'Fail', {\n          timeOut: 3000,\n          positionClass: 'toast-top-center'\n        });\n        // console.log(err.error.message);\n      });\n    }\n    static ɵfac = function LoginComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || LoginComponent)(i0.ɵɵdirectiveInject(i1.TokenService), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.ToastrService));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginComponent,\n      selectors: [[\"app-login\"]],\n      decls: 4,\n      vars: 2,\n      consts: [[\"loggedOut\", \"\"], [\"f\", \"ngForm\"], [\"class\", \"text-center\", 4, \"ngIf\", \"ngIfElse\"], [1, \"text-center\"], [1, \"container\", \"d-flex\", \"justify-content-center\"], [1, \"card\"], [1, \"card-header\"], [1, \"nav\", \"nav-tabs\"], [1, \"nav-item\"], [\"routerLink\", \"/login\", 1, \"nav-link\", \"active\"], [\"routerLink\", \"/registro\", 1, \"nav-link\"], [1, \"card-body\"], [\"novalidate\", \"\", 3, \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"nombreUsuario\"], [\"type\", \"text\", \"name\", \"nombreUsuario\", \"id\", \"nombreUsuario\", \"required\", \"\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"for\", \"password\"], [\"type\", \"password\", \"name\", \"password\", \"id\", \"password\", \"required\", \"\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [1, \"btn\", \"btn-outline-success\", \"btn-block\", 3, \"disabled\"], [1, \"fas\", \"fa-sign-in-alt\"]],\n      template: function LoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelement(0, \"app-menu\");\n          i0.ɵɵtemplate(1, LoginComponent_div_1_Template, 3, 0, \"div\", 2)(2, LoginComponent_ng_template_2_Template, 25, 3, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n        }\n        if (rf & 2) {\n          const loggedOut_r4 = i0.ɵɵreference(3);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.isLogged)(\"ngIfElse\", loggedOut_r4);\n        }\n      }\n    });\n  }\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}